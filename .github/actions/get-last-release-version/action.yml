name: 'Get last release'
inputs:
  REPO:
    description: 'repo to get last release'
    required: true
  GITHUB_TOKEN:
    description: 'github token'
    required: true

outputs:
  version:
    description: "last release version (or empty)"
    value: ${{ steps.release-infos.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: get last release
      id: release-infos
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      env:
        REMOTE_REPO: '${{inputs.REPO}}'
      with:
        github-token: ${{ inputs.GITHUB_TOKEN }}
        script: |
          const REMOTE_REPO = process.env.REMOTE_REPO;

          const latestRelease = await github.rest.repos.getLatestRelease({
              owner: REMOTE_REPO.split("/")[0],
              repo: REMOTE_REPO.split("/")[1],
          });

          const latestReleaseVersion = latestRelease.data.tag_name;
          core.setOutput('version', latestReleaseVersion);